<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C5F80730-F44F-4478-BDAE-6634EFC2CA88}</ProjectGuid>
    <RootNamespace>$safeprojectname$</RootNamespace>
    <ProjectName>KugelmatikFirmware</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>
    </PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>
    </PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)..\KugelmatikFirmware;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\libraries\ethercard;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\libraries\i2c;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\libraries\MCP23017;$(ProjectDir)..\..\..\..\..\..\Program Files (x86)\Arduino\libraries;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\libraries;$(ProjectDir)..\..\..\..\Documents\Arduino\libraries;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\cores\avrnetio;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\cores\avrnetio\avr-libc;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr\avr-netino\variants\avrnetio;$(ProjectDir)..\..\..\..\Documents\Arduino\hardware\avr;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ForcedIncludeFiles>$(ProjectDir)__vm\.KugelmatikFirmware.vsarduino.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <IgnoreStandardIncludePath>false</IgnoreStandardIncludePath>
      <PreprocessorDefinitions>__AVR_ATmega32__;ETHERCARD_TCPCLIENT=0;ETHERCARD_TCPSERVER=0;ETHERCARD_STASH=0;SERIAL_TX_BUFFER_SIZE=8;SERIAL_RX_BUFFER_SIZE=8;F_CPU=16000000L;ARDUINO=10804;ARDUINO_AVR_NET_IO;__cplusplus=201103L;_VMICRO_INTELLISENSE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectCapability Include="VisualMicro" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="BinaryHelper.cpp" />
    <ClCompile Include="config.cpp" />
    <ClCompile Include="leds.cpp" />
    <ClCompile Include="network.cpp" />
    <ClCompile Include="PacketBuffer.cpp" />
    <ClCompile Include="stepper.cpp" />
    <ClCompile Include="tick.cpp" />
    <ClCompile Include="util.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="BinaryHelper.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="constants.h" />
    <ClInclude Include="leds.h" />
    <ClInclude Include="network.h" />
    <ClInclude Include="PacketBuffer.h" />
    <ClInclude Include="stepper.h" />
    <ClInclude Include="tick.h" />
    <ClInclude Include="util.h" />
    <ClInclude Include="watchdog.h" />
    <ClInclude Include="__vm\.KugelmatikFirmware.vsarduino.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="KugelmatikFirmware.ino" />
  </ItemGroup>
  <PropertyGroup>
    <DebuggerFlavor>VisualMicroDebugger</DebuggerFlavor>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <ProjectExtensions>
    <VisualStudio>
      <UserProperties arduino.upload.maximum_size="32256" arduino.upload.speed="115200" visualmicro.package.name="avr" arduino.board.property_bag="name=AVR_NET_IO (avrnetio) w/ atmega32 (optiboot.c)&#xD;&#xA;bootloader.tool=avrdudeNoEFuse&#xD;&#xA;upload.tool=avrdude&#xD;&#xA;upload.speed=115200&#xD;&#xA;upload.protocol=arduino&#xD;&#xA;build.core=avrnetio&#xD;&#xA;build.board=AVR_NET_IO&#xD;&#xA;build.f_cpu=16000000L&#xD;&#xA;build.variant=avrnetio&#xD;&#xA;menu.cpu.anio32=atmega32 (optiboot.c)&#xD;&#xA;menu.cpu.anio32.build.mcu=atmega32&#xD;&#xA;menu.cpu.anio32.build.f_cpu=16000000L&#xD;&#xA;menu.cpu.anio32.upload.protocol=arduino&#xD;&#xA;menu.cpu.anio32.upload.maximum_size=32256&#xD;&#xA;menu.cpu.anio32.upload.maximum_data_size=2048&#xD;&#xA;menu.cpu.anio32.upload.speed=115200&#xD;&#xA;menu.cpu.anio32.bootloader.file=optiboot/optiboot_anio32.hex&#xD;&#xA;menu.cpu.anio32.bootloader.low_fuses=0xBF&#xD;&#xA;menu.cpu.anio32.bootloader.high_fuses=0xDE&#xD;&#xA;menu.cpu.anio32.bootloader.tool=avrdudeNoEFuse&#xD;&#xA;menu.cpu.anio32.bootloader.lock_bits=0x3f&#xD;&#xA;menu.cpu.anio32.bootloader.unlock_bits=0x0f&#xD;&#xA;menu.cpu.anio644=atmega644 (optiboot.c)&#xD;&#xA;menu.cpu.anio644.build.mcu=atmega644&#xD;&#xA;menu.cpu.anio644.build.f_cpu=16000000L&#xD;&#xA;menu.cpu.anio644.upload.protocol=arduino&#xD;&#xA;menu.cpu.anio644.upload.maximum_size=64512&#xD;&#xA;menu.cpu.anio644.upload.maximum_data_size=4096&#xD;&#xA;menu.cpu.anio644.upload.speed=115200&#xD;&#xA;menu.cpu.anio644.bootloader.file=optiboot/optiboot_anio644.hex&#xD;&#xA;menu.cpu.anio644.bootloader.low_fuses=0xFF&#xD;&#xA;menu.cpu.anio644.bootloader.high_fuses=0xDE&#xD;&#xA;menu.cpu.anio644.bootloader.extended_fuses=0xFD&#xD;&#xA;menu.cpu.anio644.bootloader.lock_bits=0x3f&#xD;&#xA;menu.cpu.anio644.bootloader.unlock_bits=0x0f&#xD;&#xA;menu.cpu.anio644p=atmega644p (optiboot.c)&#xD;&#xA;menu.cpu.anio644p.build.mcu=atmega644p&#xD;&#xA;menu.cpu.anio644p.build.f_cpu=16000000L&#xD;&#xA;menu.cpu.anio644p.upload.protocol=arduino&#xD;&#xA;menu.cpu.anio644p.upload.maximum_size=64512&#xD;&#xA;menu.cpu.anio644p.upload.maximum_data_size=4096&#xD;&#xA;menu.cpu.anio644p.upload.speed=115200&#xD;&#xA;menu.cpu.anio644p.bootloader.file=optiboot/optiboot_anio644p.hex&#xD;&#xA;menu.cpu.anio644p.bootloader.low_fuses=0xFF&#xD;&#xA;menu.cpu.anio644p.bootloader.high_fuses=0xDE&#xD;&#xA;menu.cpu.anio644p.bootloader.extended_fuses=0xFD&#xD;&#xA;menu.cpu.anio644p.bootloader.lock_bits=0x3f&#xD;&#xA;menu.cpu.anio644p.bootloader.unlock_bits=0x0f&#xD;&#xA;menu.cpu.anio1284p=atmega1284p (ATmegaBOOT_168.c)&#xD;&#xA;menu.cpu.anio1284p.build.mcu=atmega1284p&#xD;&#xA;menu.cpu.anio1284p.build.f_cpu=16000000L&#xD;&#xA;menu.cpu.anio1284p.upload.protocol=stk500&#xD;&#xA;menu.cpu.anio1284p.upload.maximum_size=129024&#xD;&#xA;menu.cpu.anio1284p.upload.maximum_data_size=8192&#xD;&#xA;menu.cpu.anio1284p.upload.speed=57600&#xD;&#xA;menu.cpu.anio1284p.bootloader.file=atmega/ATmegaBOOT_168_anio1284p.hex&#xD;&#xA;menu.cpu.anio1284p.bootloader.low_fuses=0xFF&#xD;&#xA;menu.cpu.anio1284p.bootloader.high_fuses=0xDC&#xD;&#xA;menu.cpu.anio1284p.bootloader.extended_fuses=0xFD&#xD;&#xA;menu.cpu.anio1284p.bootloader.lock_bits=0x3f&#xD;&#xA;menu.cpu.anio1284p.bootloader.unlock_bits=0x0f&#xD;&#xA;runtime.ide.path=C:\Program Files (x86)\Arduino&#xD;&#xA;runtime.os=windows&#xD;&#xA;build.system.path=C:\Users\Henrik\Documents\Arduino\hardware\avr\avr-netino\system&#xD;&#xA;runtime.ide.version=10801&#xD;&#xA;target_package=avr&#xD;&#xA;target_platform=avr-netino&#xD;&#xA;runtime.hardware.path=C:\Users\Henrik\Documents\Arduino\hardware\avr&#xD;&#xA;originalid=anio&#xD;&#xA;version=1.2.0&#xD;&#xA;compiler.warning_flags=-w&#xD;&#xA;compiler.warning_flags.none=-w&#xD;&#xA;compiler.warning_flags.default=&#xD;&#xA;compiler.warning_flags.more=-Wall&#xD;&#xA;compiler.warning_flags.all=-Wall -Wextra&#xD;&#xA;compiler.path={runtime.tools.avr-gcc.path}/bin/&#xD;&#xA;compiler.c.cmd=avr-gcc&#xD;&#xA;compiler.c.flags=-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD&#xD;&#xA;compiler.c.elf.flags={compiler.warning_flags} -Os -Wl,--gc-sections&#xD;&#xA;compiler.c.elf.cmd=avr-gcc&#xD;&#xA;compiler.S.flags=-c -g -x assembler-with-cpp&#xD;&#xA;compiler.cpp.cmd=avr-g++&#xD;&#xA;compiler.cpp.flags=-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD&#xD;&#xA;compiler.ar.cmd=avr-gcc-ar&#xD;&#xA;compiler.ar.flags=rcs&#xD;&#xA;compiler.objcopy.cmd=avr-objcopy&#xD;&#xA;compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0&#xD;&#xA;compiler.elf2hex.flags=-O ihex -R .eeprom&#xD;&#xA;compiler.elf2hex.cmd=avr-objcopy&#xD;&#xA;compiler.ldflags=&#xD;&#xA;compiler.size.cmd=avr-size&#xD;&#xA;build.extra_flags=&#xD;&#xA;compiler.c.extra_flags=&#xD;&#xA;compiler.c.elf.extra_flags=&#xD;&#xA;compiler.S.extra_flags=&#xD;&#xA;compiler.cpp.extra_flags=&#xD;&#xA;compiler.ar.extra_flags=&#xD;&#xA;compiler.objcopy.eep.extra_flags=&#xD;&#xA;compiler.elf2hex.extra_flags=&#xD;&#xA;recipe.c.o.pattern=&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;&#xD;&#xA;recipe.cpp.o.pattern=&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;&#xD;&#xA;recipe.S.o.pattern=&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;&#xD;&#xA;archive_file_path={build.path}/{archive_file}&#xD;&#xA;recipe.ar.pattern=&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;&#xD;&#xA;recipe.c.combine.pattern=&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm&#xD;&#xA;recipe.objcopy.eep.pattern=&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;&#xD;&#xA;recipe.objcopy.hex.pattern=&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;&#xD;&#xA;recipe.output.tmp_file={build.project_name}.hex&#xD;&#xA;recipe.output.save_file={build.project_name}.{build.variant}.hex&#xD;&#xA;recipe.size.pattern=&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;&#xD;&#xA;recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*&#xD;&#xA;recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*&#xD;&#xA;recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*&#xD;&#xA;preproc.includes.flags=-w -x c++ -M -MG -MP&#xD;&#xA;recipe.preproc.includes=&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;&#xD;&#xA;preproc.macros.flags=-w -x c++ -E -CC&#xD;&#xA;recipe.preproc.macros=&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;&#xD;&#xA;tools.avrdude.path={runtime.tools.avrdude.path}&#xD;&#xA;tools.avrdude.cmd.path={path}/bin/avrdude&#xD;&#xA;tools.avrdude.config.path={path}/etc/avrdude.conf&#xD;&#xA;tools.avrdude.upload.params.verbose=-v&#xD;&#xA;tools.avrdude.upload.params.quiet=-q -q&#xD;&#xA;tools.avrdude.upload.verify=&#xD;&#xA;tools.avrdude.upload.params.noverify=-V&#xD;&#xA;tools.avrdude.upload.pattern=&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;&#xD;&#xA;tools.avrdude.program.params.verbose=-v&#xD;&#xA;tools.avrdude.program.params.quiet=-q -q&#xD;&#xA;tools.avrdude.program.verify=&#xD;&#xA;tools.avrdude.program.params.noverify=-V&#xD;&#xA;tools.avrdude.program.pattern=&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;&#xD;&#xA;tools.avrdude.erase.params.verbose=-v&#xD;&#xA;tools.avrdude.erase.params.quiet=-q -q&#xD;&#xA;tools.avrdude.erase.pattern=&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m&#xD;&#xA;tools.avrdude.bootloader.params.verbose=-v&#xD;&#xA;tools.avrdude.bootloader.params.quiet=-q -q&#xD;&#xA;tools.avrdude.bootloader.pattern=&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m&#xD;&#xA;tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}&#xD;&#xA;vm.platform.root.path=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\Extensions\41eodwev.llz\Micro Platforms\arduino16x&#xD;&#xA;dragonisp.name=Dragon ISP&#xD;&#xA;dragonisp.communication=usb&#xD;&#xA;dragonisp.protocol=dragon_isp&#xD;&#xA;dragonhvsp.name=Dragon HVSP&#xD;&#xA;dragonhvsp.communication=usb&#xD;&#xA;dragonhvsp.protocol=dragon_hvsp&#xD;&#xA;atmelice_isp.name=Atmel-ICE (ISP)&#xD;&#xA;atmelice_isp.communication=usb&#xD;&#xA;atmelice_isp.protocol=atmelice_isp&#xD;&#xA;runtime.tools.arduinoOTA.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;runtime.tools.arduinoOTA-1.0.0.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;runtime.tools.avrdude.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;runtime.tools.avrdude-6.3.0-arduino2.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;runtime.tools.avr-gcc.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;runtime.tools.avr-gcc-4.9.2-atmel3.5.3-arduino.path=C:\Program Files (x86)\Arduino\hardware\tools\avr&#xD;&#xA;build.mcu=atmega32&#xD;&#xA;upload.maximum_size=32256&#xD;&#xA;upload.maximum_data_size=2048&#xD;&#xA;bootloader.file=optiboot/optiboot_anio32.hex&#xD;&#xA;bootloader.low_fuses=0xBF&#xD;&#xA;bootloader.high_fuses=0xDE&#xD;&#xA;bootloader.lock_bits=0x3f&#xD;&#xA;bootloader.unlock_bits=0x0f&#xD;&#xA;runtime.vm.boardinfo.id=avr_anio_anio32&#xD;&#xA;runtime.vm.boardinfo.name=avr_anio_anio32&#xD;&#xA;runtime.vm.boardinfo.desc=AVR_NET_IO (avrnetio) w/ atmega32 (optiboot.c)&#xD;&#xA;runtime.vm.boardinfo.src_location=C:\Users\Henrik\Documents\Arduino\hardware\avr\avr-netino&#xD;&#xA;ide.hint=For all platforms that use Board Manager&#xD;&#xA;ide.location.key=Arduino16x&#xD;&#xA;ide.location.ide.winreg=Arduino 1.6.x Application&#xD;&#xA;ide.location.sketchbook.winreg=Arduino 1.6.x Sketchbook&#xD;&#xA;ide.location.sketchbook.preferences=sketchbook.path&#xD;&#xA;ide.default.revision_name=1.8.0&#xD;&#xA;ide.default.version=10800&#xD;&#xA;ide.default.package=arduino&#xD;&#xA;ide.default.platform=avr&#xD;&#xA;ide.multiplatform=true&#xD;&#xA;ide.includes=arduino.h&#xD;&#xA;ide.exe_name=arduino&#xD;&#xA;ide.platformswithoutpackage=false&#xD;&#xA;ide.includes.fallback=wprogram.h&#xD;&#xA;ide.extension=ino&#xD;&#xA;ide.extension.fallback=pde&#xD;&#xA;ide.versionGTEQ=160&#xD;&#xA;ide.exe=arduino.exe&#xD;&#xA;ide.hosts=atmel&#xD;&#xA;ide.url=http://arduino.cc/en/Main/Software&#xD;&#xA;ide.help.reference.path=reference&#xD;&#xA;ide.help.reference.path2=reference\www.arduino.cc\en\Reference&#xD;&#xA;ide.help.reference.serial=reference\www.arduino.cc\en\Serial&#xD;&#xA;vm.debug=true&#xD;&#xA;software=ARDUINO&#xD;&#xA;ssh.user.name=root&#xD;&#xA;ssh.user.default.password=arduino&#xD;&#xA;ssh.host.wwwfiles.path=/www/sd&#xD;&#xA;build.working_directory={runtime.ide.path}&#xD;&#xA;ide.location.preferences.portable={runtime.ide.path}\portable&#xD;&#xA;ide.location.preferences=%VM_APPDATA_LOCAL%\arduino15\preferences.txt&#xD;&#xA;ide.location.preferences_fallback=%VM_APPDATA_ROAMING%\arduino15\preferences.txt&#xD;&#xA;ide.location.contributions=%VM_APPDATA_LOCAL%\arduino15&#xD;&#xA;ide.location.contributions_fallback=%VM_APPDATA_ROAMING%\arduino15&#xD;&#xA;ide.contributions.boards.allow=true&#xD;&#xA;ide.contributions.boards.ignore_unless_rewrite_found=true&#xD;&#xA;ide.contributions.libraries.allow=true&#xD;&#xA;ide.contributions.boards.support.urls.wiki=https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls&#xD;&#xA;ide.create_platforms_from_boardsTXT.teensy=build.core&#xD;&#xA;ide.appid=arduino16x&#xD;&#xA;location.sketchbook=C:\Users\Henrik\Documents\Arduino&#xD;&#xA;build.core.path=C:\Users\Henrik\Documents\Arduino\hardware\avr\avr-netino\cores\avrnetio&#xD;&#xA;vm.core.include=arduino.h&#xD;&#xA;vm.boardsource.path=C:\Users\Henrik\Documents\Arduino\hardware\avr\avr-netino&#xD;&#xA;runtime.platform.path=C:\Users\Henrik\Documents\Arduino\hardware\avr\avr-netino&#xD;&#xA;vm.platformname.name=avr-netino&#xD;&#xA;build.arch=AVR-NETINO&#xD;&#xA;" visualmicro.application.name="arduino16x" arduino.build.mcu="atmega32" arduino.upload.protocol="arduino" arduino.build.f_cpu="16000000L" arduino.board.desc="AVR_NET_IO (avrnetio) w/ atmega32 (optiboot.c)" arduino.board.name="avr_anio_anio32" visualmicro.platform.name="avr-netino" arduino.build.core="avrnetio" VM_ADDITIONAL_PREPROC="ETHERCARD_TCPCLIENT=0;ETHERCARD_TCPSERVER=0;ETHERCARD_STASH=0;SERIAL_TX_BUFFER_SIZE=8;SERIAL_RX_BUFFER_SIZE=8" />
    </VisualStudio>
  </ProjectExtensions>
</Project>